<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lzc.mapper.StudentMapper">

    <resultMap type="com.lzc.pojo.Student" id="studentBean">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="student_number" property="studentNumber"/>
        <result column="name" property="name"/>
        <result column="grade_id" property="gradeID"/>
        <result column="specialty_id" property="specialtyID"/>
        <association property="grade" javaType="com.lzc.pojo.Grade">
            <id column="gid" property="id"/>
            <result column="gname" property="name"/>
        </association>
        <association property="specialty" javaType="com.lzc.pojo.Specialty">
            <id column="sid" property="id"/>
            <result column="sname" property="name"/>
        </association>
    </resultMap>

    <select id="list" resultMap="studentBean">
        select st.*, s.id 'sid', g.id 'gid',g.name 'gname',s.id 'sid' ,s.name 'sname'
        from student st
                 left join specialty s on st.specialty_id = s.id
                 left join grade g on st.grade_id = g.id
        -- 		搜索
        <if test="name!=null">
            where st.name like concat('%',#{name},'%')
        </if>
        -- 		排序
        order by st.id
        <choose>
            <when test="sort=='asc'">
                asc
            </when>
            <otherwise>
                desc
            </otherwise>
        </choose>
        -- 		分页
        <if test="limit!=0">
            limit #{page},#{limit}
        </if>
    </select>

    <insert id="add" parameterType="Student">
        insert into student (username,password,name,student_number,grade_id,specialty_id)
        values (#{username},#{password},#{name},#{studentNumber},#{gradeID},#{specialtyID})
    </insert>

    <delete id="delete" parameterType="Student">
        delete
        from student
        where id = #{id}
    </delete>

    <select id="get" parameterType="_int" resultType="Student">
        select *
        from student
        where id = #{id}
    </select>

    <update id="update" parameterType="Student">
        update student
        set username=#{username},password=#{password},name=#{name},student_number=#{studentNumber},grade_id=#{gradeID},specialty_id=#{specialtyID}
        where id = #{id}
    </update>

    <select id="total" resultType="int">
        select count(*)
        from student
    </select>
</mapper>

